#!/bin/bash
set +x
set -u
set -e
set -o pipefail

fatal_error () {
  printf "FATAL ERROR: shutting down\n"
  shutdown -h now
}

trap 'fatal_error' ERR

# Enable the nbd module
modprobe nbd nbds_max=128
echo "nbd" > /etc/modules-load.d/nbd.conf
echo "options nbd nbds_max=128" > /etc/modprobe.d/nbd.conf

# Install requirements
dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
yum install -y nbd
# yum update -y # Do not do this to speed it up a bit.

re='@Microsoft.KeyVault\(SecretUri=(https://.*)\)'
if [[ "${api_key}" =~ $re ]]; then
  echo "Datadog API key is a Key Vault reference"
  API_KEY_URI=$${BASH_REMATCH[1]}
  curl -sL https://aka.ms/InstallAzureCLIDeb | bash
  echo "Retrieving Datadog API key from Azure Key Vault: $API_KEY_URI"
  az login --identity --username "${azure_client_id}"
  DD_API_KEY=$(az keyvault secret show --id "$API_KEY_URI" --query value --output tsv)
else
  DD_API_KEY="${api_key}"
fi

# Append the last 6 bytes of the VM UUID to prevent hostname collisions
VM_ID=$(cat /sys/devices/virtual/dmi/id/product_uuid)
DD_HOSTNAME="$(hostname)-$${VM_ID:(-12)}"
DD_SITE="${site}"
DD_AGENTLESS_VERSION="${scanner_version}"
DD_AGENTLESS_CHANNEL="${scanner_channel}"

hostnamectl hostname "$DD_HOSTNAME"

# Install the agent
DD_API_KEY="$DD_API_KEY" \
  DD_SITE="$DD_SITE" \
  DD_HOSTNAME="$DD_HOSTNAME" \
  bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"

# Install the agentless-scanner
cat <<EOF > /etc/yum.repos.d/datadog-agentless.repo
[datadog-agentless]
name = Datadog, Inc.
baseurl = https://yum.datadoghq.com/stable/agentless-scanner/x86_64/
enabled=1
gpgcheck=1
repo_gpgcheck=0
priority=1
gpgkey=https://keys.datadoghq.com/DATADOG_RPM_KEY_CURRENT.public
       https://keys.datadoghq.com/DATADOG_RPM_KEY_4F09D16B.public
       https://keys.datadoghq.com/DATADOG_RPM_KEY_B01082D3.public
       https://keys.datadoghq.com/DATADOG_RPM_KEY_FD4BF915.public
       https://keys.datadoghq.com/DATADOG_RPM_KEY_E09422B3.public

EOF


agentless_pkg_pattern="([[:digit:]]:)?$DD_AGENTLESS_VERSION(\.[[:digit:]]+){0,1}(~rc\.[[:digit:]]+)?(-[[:digit:]])?"
agentless_version_custom="$(yum list datadog-agentless-scanner --showduplicates | grep -E "$agentless_pkg_pattern" -om1)" || true
if [ -z "$agentless_version_custom" ]; then
  printf "Could not find a version of datadog-agentless-scanner from %s" "$DD_AGENTLESS_VERSION"
  exit 1
fi
yum install -vy "datadog-agentless-scanner-$agentless_version_custom"

# Activate agentless scanner logging
mkdir -p /etc/datadog-agent/conf.d/agentless-scanner.d
cat <<EOF > /etc/datadog-agent/conf.d/agentless-scanner.d/conf.yaml
logs:
  - type: file
    path: "/var/log/datadog/agentless-scanner.log"
    service: "agentless-scanner"
    source: go
    sourcecategory: sourcecode
EOF

chown -R dd-agent: /etc/datadog-agent/conf.d/agentless-scanner.d

# Custom configuration for agent
cat <<EOF > /etc/datadog-agent/datadog.yaml
api_key: $DD_API_KEY
site: $DD_SITE
hostname: $DD_HOSTNAME
logs_enabled: true
ec2_prefer_imdsv2: true
%{if length(agent_configuration) > 0}
${yamlencode(agent_configuration)}
%{endif}
EOF

if [ "$DD_SITE" = "datad0g.com" ]; then
cat <<EOF >> /etc/datadog-agent/datadog.yaml
remote_configuration:
  config_root: '{"signatures":[{"keyid":"6aac6a51efedb4e54915bf9fbd2cfb49fbf428d46052bcaf3c72409c33ecdf5e","sig":"4af18f0919fb9b8ba7ffc9f6fb325c887083c28a474981e29ccc5bdeea7a2bf2f8568be8f8bd3c6c498dd118e2c8f713d22032196cf400465f8fb700ba800f0d"},{"keyid":"bd3ea764afdf757f07bab1e9e501a5fda1d49a8da3eaddc53a50dbe2aff92545","sig":"2e6bb516308fd8c79faff015a443b65dea0af780842aacc5c05f49ae8fd709bfdd70e191a38d0b64aad03bb4398052b82bd224d6e55c90d4c38220aa9db62705"}],"signed":{"_type":"root","consistent_snapshot":true,"expires":"1970-01-01T00:00:00Z","keys":{"6aac6a51efedb4e54915bf9fbd2cfb49fbf428d46052bcaf3c72409c33ecdf5e":{"keyid_hash_algorithms":["sha256","sha512"],"keytype":"ed25519","keyval":{"public":"09402247ef6252018e52c7ba6a3a484936f14dad6ae921c556a1d092f4a68f0f"},"scheme":"ed25519"},"bd3ea764afdf757f07bab1e9e501a5fda1d49a8da3eaddc53a50dbe2aff92545":{"keyid_hash_algorithms":["sha256","sha512"],"keytype":"ed25519","keyval":{"public":"cf248bc222a5dfc9676a2a3ef90526c84adb09649db56686705f69f42908d7d8"},"scheme":"ed25519"}},"roles":{"root":{"keyids":["bd3ea764afdf757f07bab1e9e501a5fda1d49a8da3eaddc53a50dbe2aff92545","6aac6a51efedb4e54915bf9fbd2cfb49fbf428d46052bcaf3c72409c33ecdf5e"],"threshold":2},"snapshot":{"keyids":["bd3ea764afdf757f07bab1e9e501a5fda1d49a8da3eaddc53a50dbe2aff92545","6aac6a51efedb4e54915bf9fbd2cfb49fbf428d46052bcaf3c72409c33ecdf5e"],"threshold":2},"targets":{"keyids":["bd3ea764afdf757f07bab1e9e501a5fda1d49a8da3eaddc53a50dbe2aff92545","6aac6a51efedb4e54915bf9fbd2cfb49fbf428d46052bcaf3c72409c33ecdf5e"],"threshold":2},"timestamp":{"keyids":["bd3ea764afdf757f07bab1e9e501a5fda1d49a8da3eaddc53a50dbe2aff92545","6aac6a51efedb4e54915bf9fbd2cfb49fbf428d46052bcaf3c72409c33ecdf5e"],"threshold":2}},"spec_version":"1.0","version":1}}'
  director_root: '{"signatures":[{"keyid":"233a529fe7c63b5b9081f6e0e2681cc227f85e04ad434d0a165a2f69b87255a6","sig":"6d7ddf4bcbd1ce223b5352cae4671ef42800d79f0c94dda905cf0dd8a6198ba69795a19201dc7230e4bd872cf109e827233678bf76389910933472417488320e"},{"keyid":"6ca796e7b4883af3bb3d522dc0009984dcbf5ad2a6c9ea354d30acc32d8b75d1","sig":"a1236d12903e1c4024fc6340c50a0f2fe9972e967eb2bace8d6594e156f0466f772bfc0c9f30e07067904073c0d7ba7d48ad00341405312daf0d7bc502ccc50f"}],"signed":{"_type":"root","consistent_snapshot":true,"expires":"1970-01-01T00:00:00Z","keys":{"233a529fe7c63b5b9081f6e0e2681cc227f85e04ad434d0a165a2f69b87255a6":{"keyid_hash_algorithms":["sha256","sha512"],"keytype":"ed25519","keyval":{"public":"f7c278f32e69ce7d5ca5b81bd2cbe2b4b44177eee36ed025ec06bd19e47eaefe"},"scheme":"ed25519"},"6ca796e7b4883af3bb3d522dc0009984dcbf5ad2a6c9ea354d30acc32d8b75d1":{"keyid_hash_algorithms":["sha256","sha512"],"keytype":"ed25519","keyval":{"public":"47be15ec10499208aa5ef9a1e32010cc05c047a98d18ad084d6e4e51baa1b93c"},"scheme":"ed25519"}},"roles":{"root":{"keyids":["6ca796e7b4883af3bb3d522dc0009984dcbf5ad2a6c9ea354d30acc32d8b75d1","233a529fe7c63b5b9081f6e0e2681cc227f85e04ad434d0a165a2f69b87255a6"],"threshold":2},"snapshot":{"keyids":["6ca796e7b4883af3bb3d522dc0009984dcbf5ad2a6c9ea354d30acc32d8b75d1","233a529fe7c63b5b9081f6e0e2681cc227f85e04ad434d0a165a2f69b87255a6"],"threshold":2},"targets":{"keyids":["6ca796e7b4883af3bb3d522dc0009984dcbf5ad2a6c9ea354d30acc32d8b75d1","233a529fe7c63b5b9081f6e0e2681cc227f85e04ad434d0a165a2f69b87255a6"],"threshold":2},"timestamp":{"keyids":["6ca796e7b4883af3bb3d522dc0009984dcbf5ad2a6c9ea354d30acc32d8b75d1","233a529fe7c63b5b9081f6e0e2681cc227f85e04ad434d0a165a2f69b87255a6"],"threshold":2}},"spec_version":"1.0","version":1}}'
EOF
fi

cat <<EOF > /etc/datadog-agent/agentless-scanner.yaml
hostname: $DD_HOSTNAME
api_key: $DD_API_KEY
site: $DD_SITE
azure_client_id: ${azure_client_id}
installation_mode: terraform
installation_version: 0.11.2
%{if length(scanner_configuration) > 0}
${yamlencode(scanner_configuration)}
%{endif}
EOF

chmod 600 /etc/datadog-agent/agentless-scanner.yaml

# Restart the agent
systemctl restart datadog-agent

# Give some room to the agent to start to not miss logs
sleep 5

# Stop the scanner after 24 hours. This will cause the health
# probe to fail and trigger an automatic instance replacement.
systemd-run --on-boot=24h systemctl stop datadog-agentless-scanner

# Enable and start datadog-agentless-scaner
systemctl enable --now datadog-agentless-scanner
